services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "4000"  # Only expose the internal port, not the external one
    environment:
      - NODE_ENV=production
      - PORT=4000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_URI=mongodb://mongodb:27017/myDatabase  # Verbindungs-String zur MongoDB
    deploy:
      replicas: 3  # Run multiple instances of the backend
    networks:
      - app-network

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Expose the Frontend port to the host
    networks:
      - app-network
    depends_on:
      - backend

  haproxy:
    image: haproxy:latest
    container_name: haproxy
    ports:
      - "4000:4000"  # Expose the HAProxy port to the host
    volumes:
      - ./HAProxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - app-network
    depends_on:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379"
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d/  # Initialisierungsskripte einbinden

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
